{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ken",
				"kernel_size"
			],
			[
				"tensor",
				"tensor_shape"
			],
			[
				"diff",
				"diff_d0"
			],
			[
				"pad",
				"pad_to_desired"
			],
			[
				"tenso",
				"tensor_shape"
			],
			[
				"label",
				"label_img"
			],
			[
				"weigh",
				"weight_img"
			],
			[
				"inpu",
				"input_type"
			],
			[
				"get_",
				"get_int_in_string"
			],
			[
				"weig",
				"weight_path"
			],
			[
				"labe",
				"label_path"
			],
			[
				"feat",
				"feature_path"
			],
			[
				"image_",
				"image_path"
			],
			[
				"wei",
				"weight_map"
			],
			[
				"show",
				"show_type"
			],
			[
				"cla",
				"classes_start"
			],
			[
				"class",
				"classes_start"
			],
			[
				"image",
				"image_path"
			],
			[
				"im",
				"image_to_base64_websafe"
			],
			[
				"in",
				"input_format"
			],
			[
				"input",
				"input_text"
			],
			[
				"inp",
				"input_text"
			],
			[
				"carvana",
				"carvana-192215"
			],
			[
				"pred",
				"predict"
			],
			[
				"m",
				"model_dir"
			],
			[
				"run",
				"run_config"
			],
			[
				"train",
				"trained_estimator"
			],
			[
				"Run",
				"RunConfig"
			],
			[
				"exp",
				"exp_param"
			],
			[
				"dat",
				"data_dir"
			],
			[
				"learn_",
				"learning_rate"
			],
			[
				"ar",
				"arguments"
			],
			[
				"out",
				"output_path"
			],
			[
				"con",
				"concat_bypass"
			],
			[
				"decode",
				"decode_stack_filters"
			],
			[
				"en",
				"encode_stack_filters"
			],
			[
				"buck",
				"bucket_name"
			],
			[
				"dr",
				"directory"
			],
			[
				"pa",
				"package_path"
			],
			[
				"tf",
				"tfrecord_path"
			],
			[
				"trani",
				"trainer"
			],
			[
				"model_",
				"model_type"
			],
			[
				"get",
				"get_all_files_containing"
			],
			[
				"data",
				"dataset"
			],
			[
				"batch",
				"batch_size"
			],
			[
				"arch",
				"arch_type"
			],
			[
				"bat",
				"batch_size"
			],
			[
				"test",
				"test_shards"
			],
			[
				"val",
				"val_shards"
			],
			[
				"sha",
				"shards"
			],
			[
				"sa",
				"shards"
			],
			[
				"shar",
				"shard_lbl"
			],
			[
				"shard",
				"shard_ftr"
			],
			[
				"spli",
				"split_lists"
			],
			[
				"li",
				"list_of_lists"
			],
			[
				"val_",
				"val_ratio"
			],
			[
				"file",
				"file_list"
			],
			[
				"d",
				"directory"
			],
			[
				"is",
				"is_video"
			],
			[
				"count",
				"count_token"
			],
			[
				"coun",
				"count_token"
			],
			[
				"new",
				"new_count"
			],
			[
				"new_",
				"new_time"
			],
			[
				"cum",
				"cum_sum"
			],
			[
				"co",
				"counts"
			],
			[
				"c",
				"counter"
			],
			[
				"sor",
				"sort_word_count"
			],
			[
				"random",
				"random_pairs"
			],
			[
				"prev",
				"prev_obj_nr"
			],
			[
				"prev_",
				"prev_file_id"
			],
			[
				"sp",
				"split"
			],
			[
				"split",
				"split_str"
			],
			[
				"boud",
				"bounded_image"
			],
			[
				"obj",
				"object_id"
			],
			[
				"vi",
				"video_max_fps"
			],
			[
				"vide",
				"video_id\tparam"
			],
			[
				"yt",
				"youtube_id"
			],
			[
				"vide_",
				"video_file"
			],
			[
				"vid",
				"video_file"
			],
			[
				"v",
				"video"
			],
			[
				"down",
				"download_youtube"
			],
			[
				"yout",
				"youtube_id"
			],
			[
				"CSV",
				"CSV_FILES"
			],
			[
				"CS",
				"CSV_FILES"
			],
			[
				"fu",
				"fusion_cfg"
			],
			[
				"_disp",
				"_dispenser_db_loc"
			],
			[
				"dis",
				"dispenser_container"
			],
			[
				"igno",
				"ignore_ids"
			],
			[
				"ids_",
				"ids_to_save"
			],
			[
				"_pr",
				"_processed_ids"
			],
			[
				"proce",
				"processed_ids"
			],
			[
				"up",
				"update_count\tstatement"
			],
			[
				"act",
				"activation_time\tstatement"
			],
			[
				"we",
				"weight\tstatement"
			],
			[
				"ac",
				"activation_time\tstatement"
			],
			[
				"dev",
				"devid"
			],
			[
				"_re",
				"_release_long_scenarios"
			],
			[
				"tags",
				"tags_to_send"
			],
			[
				"Q",
				"QuuppaDispensers"
			],
			[
				"disp",
				"dispenser_name"
			],
			[
				"the_",
				"the_worker"
			],
			[
				"de",
				"deleted_count"
			],
			[
				"stat",
				"status\tstatement"
			],
			[
				"start_",
				"start_delete_from_db_thread\tfunction"
			],
			[
				"save",
				"save_container_at\tparam"
			],
			[
				"_di",
				"_dispenser_in_room"
			],
			[
				"engin",
				"engine_cfg"
			],
			[
				"corr",
				"corridor_id"
			],
			[
				"get_di",
				"get_dispensers_by_room_id"
			],
			[
				"hot",
				"hotzone_id"
			],
			[
				"ro",
				"room_id\tparam"
			],
			[
				"_dis",
				"_dispenser_in_room\tstatement"
			],
			[
				"db_",
				"db_id_loc\tparam"
			],
			[
				"scenar",
				"scenario_tags\tstatement"
			],
			[
				"scen",
				"scenario_tags\tstatement"
			],
			[
				"_get",
				"_get_mean_pos_from_response"
			],
			[
				"y",
				"y"
			],
			[
				"sort",
				"sort_idx"
			],
			[
				"pars",
				"parse_zone"
			],
			[
				"list",
				"list_zone_id"
			],
			[
				"list_",
				"list_zone_name"
			],
			[
				"purge",
				"purge_all\tfunction"
			],
			[
				"compliance_",
				"compliance_utils"
			],
			[
				"Res",
				"ResultDownloader\tclass"
			],
			[
				"time",
				"time_window"
			],
			[
				"fet",
				"fetching_result"
			],
			[
				"EC",
				"ECU_NR"
			],
			[
				"this",
				"this_output"
			]
		]
	},
	"buffers":
	[
		{
			"file": "setup.py",
			"settings":
			{
				"buffer_size": 600,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "unet/label/convert.py",
			"settings":
			{
				"buffer_size": 1723,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "unet/label/common.py",
			"settings":
			{
				"buffer_size": 3050,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"term",
				"Terminal View: Open Bash Terminal"
			],
			[
				"pacl",
				"Install Package Control"
			],
			[
				"glu",
				"Glue - Launch"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			]
		],
		"width": 461.0
	},
	"console":
	{
		"height": 393.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"nam",
			"pribuild_systemsbuild_systemsntjson.dumps(projFile)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/adamf/repos/unet_weight",
		"/home/adamf/repos/unet_weight/unet",
		"/home/adamf/repos/unet_weight/unet/label",
		"/home/adamf/repos/unet_weight/unet.egg-info"
	],
	"file_history":
	[
		"/home/adamf/repos/unet_weight/unet/label/parser/convert.py",
		"/home/adamf/repos/unet_weight/unet/common.py",
		"/home/adamf/repos/unet_weight/unet/parse.py",
		"/home/adamf/repos/unet_weight/unet/__init__.py",
		"/home/adamf/repos/carvana_gcp/config/ml_config.yaml",
		"/home/adamf/repos/carvana_gcp/config/hyper_tune.yaml",
		"/home/adamf/repos/carvana_gcp/scripts/run_gcloud.py",
		"/home/adamf/repos/carvana_gcp/src/trainer/task.py",
		"/home/adamf/repos/carvana_gcp/scripts/process_images.py",
		"/home/adamf/repos/carvana_gcp/scripts/create_tfrecord.py",
		"/home/adamf/repos/carvana_gcp/src/trainer/model.py",
		"/home/adamf/repos/carvana_gcp/scripts/run_locally.py",
		"/home/adamf/repos/carvana_gcp/src/trainer/input.py",
		"/home/adamf/repos/carvana_gcp/src/trainer/arch.py",
		"/home/adamf/repos/carvana_gcp/src/lib/tfops.py",
		"/home/adamf/repos/carvana_gcp/.gitignore",
		"/home/adamf/repos/carvana_gcp/IPython/__init__.py",
		"/home/adamf/repos/carvana_gcp/carvana_gcp.sublime-project",
		"/home/adamf/repos/carvana_gcp/src/lib/imgops.py",
		"/home/adamf/repos/carvana_gcp/scripts/Dimension_Calc.ods",
		"/home/adamf/repos/carvana_gcp/Dockerfiles/tf_gpu.Dockerfile",
		"/hdd/users/adamf/remote_builds/carvana_gcp/2018_02_13_131750/src/lib/tfops.py",
		"/home/adamf/repos/carvana_gcp/setup.py",
		"/home/adamf/repos/carvana_gcp/src/tfrecord/parsers.py",
		"/home/adamf/repos/carvana_gcp/src/lib/fileops.py",
		"/home/adamf/repos/carvana_gcp/src/tfrecord/common.py",
		"/home/adamf/repos/carvana_gcp/src/lib/process_images.py",
		"/home/adamf/repos/carvana_gcp/Dockerfiles/tf_cpu.Dockerfile",
		"/home/adamf/repos/carvana_gcp/src/deployed/start_service.py",
		"/home/adamf/repos/carvana_gcp/src/deployed/make_query.py",
		"/home/adamf/repos/carvana_gcp/src/deployed/make_local_query.py",
		"/home/adamf/repos/carvana_gcp/src/deployed/common.py",
		"/home/adamf/repos/carvana_gcp/scripts/src/trainer/input.py",
		"/home/adamf/repos/carvana_gcp/scripts/src/tfrecord/common.py",
		"/home/adamf/repos/carvana_gcp/Output.txt",
		"/home/adamf/repos/carvana_gcp/scripts/__init__.py",
		"/home/adamf/repos/carvana_gcp/src/query_deployed_model.py",
		"/home/adamf/repos/cryptohype/src/youtube_common.py",
		"/home/adamf/.config/sublime-text-3/Packages/User/python3m.sublime-build",
		"/home/adamf/.config/sublime-text-3/Cache/Python/Python.sublime-syntax.cache",
		"/home/adamf/repos/carvana_gcp/src/setup.py",
		"/home/adamf/repos/carvana_gcp/src/deployed/__init__.py",
		"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py",
		"/home/adamf/repos/carvana_gcp/ReadMe.md",
		"/home/adamf/repos/carvana_gcp/src/lib/listops.py",
		"/home/adamf/repos/carvana_gcp/src/run/experiment.py",
		"/home/adamf/repos/carvana_gcp/src/run/network.py",
		"/home/adamf/repos/gcp_lib/examples/datalab/start.py",
		"/home/adamf/repos/carvana_gcp/__init__.py",
		"/home/adamf/repos/carvana_gcp/src/trainer/__init__.py",
		"/home/adamf/repos/carvana_gcp/run_locally.py",
		"/home/adamf/.config/sublime-text-3/Packages/User/AutoDocstring.sublime-settings",
		"/home/adamf/repos/carvana_gcp/prepare_data.ipynb",
		"/home/adamf/.config/sublime-text-3/Packages/AutoDocstring/AutoDocstring.sublime-settings",
		"/home/adamf/.config/sublime-text-3/Packages/AutoDocstring/Default.sublime-keymap",
		"/home/adamf/.config/sublime-text-3/Packages/AutoPEP8/AutoPep8.sublime-settings",
		"/home/adamf/repos/carvana_gcp/src/arch/simple.py",
		"/home/adamf/repos/carvana_gcp/src/arch/__init__.py",
		"/home/adamf/repos/carvana_gcp/src/run/__init__.py",
		"/home/adamf/repos/carvana_gcp/src/lib/__init__.py",
		"/home/adamf/repos/carvana_gcp/src/tfrecord/__init__.py",
		"/home/adamf/repos/carvana_gcp/src/__init__.py",
		"/home/adamf/Documents/Berge/Projects/ImageDiff/imagediff.sublime-project",
		"/home/adamf/Documents/Berge/Projects/ImageDiff/src/input_pipe/download_data.py",
		"/home/adamf/Documents/Berge/Projects/ImageDiff/Dockerfiles/Server_Tensorflow/Dockerfile",
		"/home/adamf/Documents/Berge/Projects/ImageDiff/Dockerfiles/Deploy_Tensorflow/Dockerfile",
		"/home/adamf/Documents/Berge/Projects/ImageDiff/src/input_pipe/parse_dataset.py",
		"/home/adamf/Documents/Berge/Projects/graph_loaders.sublime-project",
		"/home/adamf/Documents/Berge/Projects/fusion/scripts/config.py",
		"/home/adamf/Documents/Berge/Projects/fusion/src/cloud/dispenser_cloud.py",
		"/home/adamf/Documents/Berge/Projects/fusion/src/parser/common.py",
		"/home/adamf/Documents/Berge/Projects/fusion/src/parser/mongo_fetch_new.py",
		"/home/adamf/Documents/Berge/Projects/fusion/src/parser/compliance_engine.py",
		"/home/adamf/Documents/Berge/Projects/fusion/src/parser/compliance_engine_quuppa.py",
		"/home/adamf/Documents/Berge/Projects/fusion/src/quppa/ProcessData.py",
		"/home/adamf/Documents/Berge/Projects/fusion/src/cloud/mongo_client.py",
		"/home/adamf/Documents/Berge/Projects/fusion/src/map/Json2Room.py",
		"/home/adamf/Documents/Berge/Projects/fusion/layouts/Sahlgrenska.json",
		"/home/adamf/Documents/Berge/Projects/fusion/src/gui_util/FileHandler.py",
		"/home/adamf/Documents/Berge/Projects/fusion/MainGUI.py",
		"/home/adamf/Documents/Berge/Projects/fusion/SCA.sublime-project",
		"/home/adamf/Documents/Berge/Projects/fusion/scripts/run/source_bash.sh",
		"/home/adamf/Documents/Berge/Projects/fusion/scripts/run/start_all_engines.sh",
		"/home/adamf/Documents/Berge/Projects/fusion/scripts/run/start_udp_tags.sh",
		"/home/adamf/Documents/Berge/Projects/fusion/scripts/run/start_compliance_engine.sh",
		"/home/adamf/Documents/Berge/Projects/fusion/README.md",
		"/home/adamf/Documents/Berge/Projects/fusion/src/common/printer.py",
		"/home/adamf/Documents/Berge/Projects/fusion/src/cloud/purge_azure_collections.py",
		"/home/adamf/Documents/Berge/Projects/fusion/src/cloud/IbmCloud.py",
		"/home/adamf/Documents/Berge/Projects/fusion/src/quppa/CaptureUDP.py",
		"/home/adamf/Documents/Berge/Projects/fusion/src/parser/compliance_utils.py",
		"/home/adamf/Documents/Berge/Projects/fusion/diagnostic/visualize_quuppa_dispenser_position.py",
		"/home/adamf/Documents/Berge/Projects/fusion/scripts/run/start_udp_dispensers.sh",
		"/home/adamf/Documents/Berge/Projects/fusion/layouts/BergeNewOffice.json",
		"/home/adamf/Documents/Berge/Projects/fusion/scripts/setup/build_docker.sh",
		"/usr/local/lib/python3.5/argparse.py",
		"/home/adamf/Documents/Berge/Projects/fusion/.gitignore",
		"/home/adamf/Documents/Berge/Projects/fusion/scripts/run/start_both_engines.sh",
		"/home/adamf/Documents/Berge/Projects/fusion/scripts/run/start_udp_engine.sh",
		"/home/adamf/Documents/Berge/Projects/fusion/src/parser/mongo_fetch.py",
		"/home/adamf/Documents/Berge/Projects/fusion/scripts/run/cronjob_watch_upd_engine.sh",
		"/home/adamf/Documents/Berge/Projects/fusion/setup_scripts/setup_engine.py",
		"/home/adamf/Documents/Berge/Projects/fusion/src/parser/data_loader.py",
		"/home/adamf/Documents/Berge/Projects/fusion/setup_scripts/cronjob_watchdog.sh",
		"/home/adamf/Documents/Berge/Projects/fusion/Dockerfiles/gui_docker/Dockerfile",
		"/home/adamf/Documents/Berge/Projects/compliance/src/cloud/mongo_client.py",
		"/home/adamf/Documents/Berge/Projects/compliance/src/parser/mongo_fetch.py",
		"/home/adamf/Documents/Berge/Projects/compliance/src/cloud/cosmos_client.py",
		"/home/adamf/Documents/Berge/Projects/compliance/setup_scripts/setup_engine.py",
		"/home/adamf/Documents/Berge/Projects/compliance/Dockerfiles/slim_docker/Dockerfile",
		"/home/adamf/Documents/Berge/Projects/compliance/src/common/utils.py",
		"/home/adamf/Documents/Berge/Projects/compliance/src/filters/filter_wrapper_quuppa.py",
		"/home/adamf/Documents/Berge/Projects/compliance/src/parser/common.py",
		"/home/adamf/Documents/Berge/Projects/compliance/diagnostic/visualize_quuppa_dispenser_position.py",
		"/home/adamf/Documents/Berge/Projects/compliance/src/parser/compliance_engine_quuppa.py",
		"/home/adamf/Documents/Berge/Projects/compliance/src/map/Json2Room.py",
		"/home/adamf/Documents/Berge/Projects/compliance/src/parser/compliance_utils.py",
		"/home/adamf/Documents/Berge/Projects/compliance/SCA.sublime-project",
		"/home/adamf/Documents/Berge/Projects/compliance/.gitignore",
		"/home/adamf/Documents/Berge/Projects/compliance/src/cloud/scenario_filters.py",
		"/home/adamf/Documents/Berge/Projects/compliance/src/uwb_legacy/DataReader.py",
		"/home/adamf/Documents/Berge/Projects/compliance/src/parser/compliance_engine.py",
		"/home/adamf/Documents/Berge/Projects/compliance/src/map/Room.py",
		"/home/adamf/Documents/Berge/Projects/compliance/src/cloud/IbmCloud.py",
		"/home/adamf/Documents/Berge/Projects/compliance/src/parser/mongo_fetch_new.py",
		"/home/adamf/Documents/Berge/Projects/compliance/src/cloud/Payloads.py",
		"/home/adamf/Documents/Berge/Projects/compliance/src/cloud/ResultDownloader.py",
		"/home/adamf/Documents/Berge/Projects/compliance/src/common/stat_util.py"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 99.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"image_path",
			"image",
			"Image",
			"matplotlib",
			"base64",
			"BytesIO",
			"os",
			"plt",
			"cdist",
			"512",
			"1024",
			"512",
			"img_sizes",
			"get_input_feeder",
			", ",
			"596",
			"520",
			"572",
			"480",
			"572",
			"1024",
			"random_",
			"320",
			"3",
			"1",
			"0",
			"int(",
			"572",
			"772",
			"768",
			"780",
			"800",
			"1024",
			"572",
			"]",
			"0",
			"2",
			"0",
			"juggernut@192.168.1.10",
			"480",
			"weight_img",
			"572",
			"#",
			"572",
			"#",
			"0,678",
			",",
			"1",
			"shape",
			"padding",
			"Padding",
			"padding",
			"Padding",
			"padding",
			"mask",
			"-1",
			"weight_img",
			"lr",
			"flip_left_right",
			" k=k_rotate",
			", k=k_rotate",
			", ",
			"image",
			", ",
			"/data/carvana",
			"TYPE",
			"iList",
			"common",
			"label",
			"'labels'",
			"'Labels'",
			"'labels'",
			"labels",
			"label",
			"lbl",
			"label",
			"lbl",
			"label",
			"lbl",
			"label",
			"y",
			"x",
			"add_weight",
			"sigma_px",
			"effective_pixel_range",
			"y_effextive",
			"x_effextive",
			"ex",
			"x",
			".",
			"x",
			"image_org",
			"model_type",
			"end_index",
			"split_index",
			"pip3",
			"1516973096",
			"ImgImgParser",
			"tensorflow",
			"R.",
			"R ",
			"r",
			"R",
			"image_content",
			"BytesIO",
			"imgByteArr",
			"features['inputs']",
			"test",
			"String",
			"’",
			"‘",
			"your_project_ID",
			"hparams",
			"hparams.__dict__",
			"=",
			"hparams",
			"arguments",
			"output_dir",
			"buffer_size",
			"model_dir",
			"learn_runner",
			" % mode",
			"%s/",
			", ",
			"None",
			"TYPE",
			"None",
			"lr"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"'"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "setup.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 600,
						"regions":
						{
						},
						"selection":
						[
							[
								600,
								600
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "unet/label/convert.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1723,
						"regions":
						{
						},
						"selection":
						[
							[
								1723,
								1723
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 325.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "unet/label/common.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3050,
						"regions":
						{
						},
						"selection":
						[
							[
								51,
								51
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 414.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "TF_CPU:1.4.0-py3",
	"project": "unet_weight.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/repos/carvana_gcp/carvana_gcp.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 325.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
